{"version":"5","defaultTimeframe":{"from":"now-2h","to":"now"},"sections":[{"id":"eb623652-bd73-4092-8593-cd30819394f0","type":"markdown","markdown":"# Welcome to Kubernetes March Madness!\n\n##### *If you're seeing this Dynatrace notebook, you've successfully figured out how to upload notebooks to your Dynatrace environment :)*\n\nFor weeks 3 and 4, you will be presented with 5 different scenarios to solve with Kubernetes and Dynatrace. Many of these scenarios are designed to challenge your knowledge of Kubernetes and Dynatrace troubleshooting concepts, and you are not expected to be able to solve every scenario you are given. Some of the scenarios are purposely difficult and you will need to leverage Kubernetes documentation and external resources to solve the issues.\n\nThe March Madness organizers will be able to point you in the right direction, however we will not be able to directly answer questions for you in some instances. A few resources to critical docs will be provided below to help you find the answers you'll need.\n\n*NOTE: While we are using Dynatrace notebooks, you will most likely not be using Grail queries. You can use that if you would like, but many answers will come from information found on Dynatrace monitoring pages and Kubectl itself.*"},{"id":"173508f9-5403-487f-ac2f-87946a5b8946","type":"markdown","markdown":"# Scenarios\n\nScenarios will be given by the March Madness organizers during your LevelUp calls. Each scenario will be given as a Dynatrace notebook, where you will store your answers. You can also use this to collaborate as a team, as you can share the notebook with other Dynatrace users and edit it at the same time. If you need to upload screenshots, we recommend creating a Word doc where you can put the screenshots, and leave a link to the Word doc in the Notebook. Make sure that you share the Word doc so anyone in Dynatrace can access it!"},{"id":"a2ad66f1-07dc-47e3-8a3b-30716888ff23","type":"markdown","markdown":"# Prerequisites \n\n##### To solve these scenarios, you will need:\n\n* A Dynatrace environment that is capable of performing full-stack monitoring, Kubernetes monitoring, and notebooks (any sprint/dev environment should work fine)\n* A Kubernetes cluster (can be deployed anywhere, we recommend you use your K3s instance we set up in WSL during the labs)\n* A way to communicate and collaborate with your teammates (if you're virtual, we'll set up breakout rooms so you can collaborate with your team)"},{"id":"c332c47a-7656-4a64-a641-1347dcdce8bc","type":"markdown","markdown":"# Resources to use\n\n##### Here are some links to resources you may want to use when going through the scenarios:\n\n* [Dynatrace Kubernetes Documentation](https://docs.dynatrace.com/docs/setup-and-configuration/setup-on-k8s)\n* [Kubernetes Documentation](https://kubernetes.io/docs/home/)\n* [Kubectl Quick Reference Guide](https://kubernetes.io/docs/reference/kubectl/quick-reference/)\n\n# Quick tips\n\n* Know how to use your text editor of choice in Linux (vim, nano, emacs, etc). By default, kubectl will attempt to use vim, this can be modified by adding the KUBE_EDITOR environment variable to whatever text editor you want.\n* The Kubernetes documentation will often give you examples in YAML files. Don't be scared by this! YAML files will give you an exact description of how Kubernetes objects should be created.\n* Use shell completion and an alias to speed up your input of kubectl commands. This is the concept of using the \"Tab\" key to auto complete the word you're typing in a command (i.e. hit tab when you have typed in \"kubectl get dep\", and it'll auto complete to \"kubectl get deployments.apps\"). Need info on how to set it up? See the tile below."},{"id":"a2a41887-8fd2-44a0-8e2b-eba8ecfb3460","type":"markdown","markdown":"# Need autocompletion and an alias set up?\n\nAuto completion and using an alias are two great ways to speed up your usage of kubectl. Note that by default, the K3s distribution on WSL does not set this up, you'll need to set it up manually. Other flavors/distributions of Kubernetes may set this up differently.\n\nYou can add this to your shell by running these commands:\n\n```\necho 'source <(kubectl completion bash)' >>~/.bashrc\necho 'alias k=kubectl' >>~/.bashrc\necho 'complete -o default -F __start_kubectl k' >>~/.bashrc\nsource ~/.bashrc\n```\n\nThis does two things: turns on auto complete with bash, and assigns an alias called `k` which auto completes to kubectl. You now have two new features availale:\n\n* `k` can be used in the same way as `kubectl`. AKA, `k get pods` and `kubectl get pods` now do the exact same thing.\n* Auto complete now works, use the `Tab` key to use it."}]}