{"version":"5","defaultTimeframe":{"from":"now-2h","to":"now"},"sections":[{"id":"da8ac377-4290-453a-b2fb-45c079dd8ca0","type":"markdown","markdown":"# Scenario 2\n\n##### At the quirky startup ByteFleet, the dev team is experimenting with a new microservice that simulates the eating habits of digital creatures called “ByteBeasts.” To ensure the ByteBeasts don’t overindulge in system resources, the team needs to set up a new pod in a namespace called “scenario2” with strict dietary restrictions, defined by CPU and memory limits. They’ll use Dynatrace to monitor the ByteBeasts’ resource consumption, making sure they stay within their allocated “calorie” intake.\n\n##### Set up a new pod in a new namespace called “scenario2” using the “nginx:alpine” image (use any name you want). Assign CPU and memory limits and requests as defined:\n* CPU requests: 100 mCores\n* CPU limits: 250 mCores\n* Memory requests: 128 MiB\n* Memory limits: 256 MiB\n##### Ensure that Dynatrace sees the CPU and memory usage, requests, and limits. Take a screenshot of this. Use the Data Explorer to create a custom chart showing this pod’s CPU usage and limits.\n\n\n### Helpful links:\n* [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/)\n\n### Deliverables:\n* The command/YAML you used to create the Nginx pod\n* Screenshots of kubectl showing the CPU requests and limits applied\n* Screenshots of Dynatrace showing the resources and limits, and the data explorer chart."},{"id":"b3e3d3a2-c91b-4f91-a776-c6e73c237ff3","type":"markdown","markdown":"# Answer\n\nUse this markdown tile to include your answer! Feel free to add markdown tiles as you want."}]}